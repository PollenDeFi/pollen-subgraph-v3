specVersion: 0.0.2
description: Pollen Defi is a community powered asset management platform
repository: https://github.com/PollenDeFi/pollen-subgraph-v3

schema:
  file: ./schema.graphql

dataSources:
  - kind: ethereum/contract
    name: Portfolio
    network: {{ network }}
    source:
      address: '{{ pollenDAO }}'
      abi: Portfolio
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/portfolio.ts
      entities:
        - UserStat
        - Asset
        - PortfolioAllocation
        - Portfolio
      abis:
        - name: Portfolio
          file: ./abis/Portfolio.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Quoter
          file: ./abis/Quoter.json
      eventHandlers:
        - event: AssetAdded(indexed address)
          handler: handleAssetAdded
        - event: AssetRemoved(indexed address)
          handler: handleAssetRemoved
        - event: PortfolioCreated(indexed address,uint256,uint256[],bool)
          handler: handlePortfolioCreated
        - event: PortfolioRebalanced(indexed address,uint256[],uint256,uint256,uint256,bool)
          handler: handlePortfolioRebalanced
        - event: Delegated(indexed address,indexed address,uint256,bool)
          handler: handleDelegated
        - event: BenchmarkPortfolioCreated(indexed address,uint256[])
          handler: handleBenchmarkCreated

  - kind: ethereum/contract
    name: Minter
    network: {{ network }}
    source:
      address: '{{ pollenDAO }}'
      abi: Minter
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/minter.ts
      entities:
        - UserStat
        - Portfolio
      abis:
        - name: Minter
          file: ./abis/Minter.json
      eventHandlers:
        - event: WithdrawWithPenalty(indexed address,indexed address,uint256,uint256,uint256,bool)
          handler: handleWithdrawWithPenalty
        - event: WithdrawWithReward(indexed address,indexed address,uint256,uint256,uint256,bool)
          handler: handleWithdrawWithReward

  - kind: ethereum/contract
    name: Leagues
    network: {{ network }}
    source:
      address: '{{ leagues }}'
      abi: Leagues
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/leagues.ts
      entities:
        - Leagues
      abis:
        - name: Leagues
          file: ./abis/Leagues.json
      eventHandlers:
        - event: NewLeague(indexed address,uint256,string)
          handler: handleNewLeague
        - event: Invited(indexed address,indexed uint256)
          handler: handleInvited
        - event: JoinedLeague(indexed address,indexed uint256)
          handler: handleJoinedLeague
        - event: LeftLeague(indexed address,uint256)
          handler: handleLeftLeague
        - event: TransferAdminRole(indexed address,indexed address,uint256)
          handler: handleTransferAdminRole
        - event: MemberRemoved(indexed address,indexed uint256)
          handler: handleMemberRemoved

  - kind: ethereum/contract
    name: Governance
    network: {{ network }}
    source:
      address: '{{ pollenDAO }}'
      abi: Governance
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/governance.ts
      entities:
        - Proposal
      abis:
        - name: Governance
          file: ./abis/Governance.json
      eventHandlers:
        - event: NewProposal(indexed address,address,uint256)
          handler: handleNewProposal
        - event: Voted(indexed address,address,uint256)
          handler: handleVoted
        - event: ClaimedTokens(indexed address,uint256,uint256)
          handler: handleClaimedTokens
        - event: QuorumChanged(uint256)
          handler: handleQuorumChanged
        - event: TimeLockChanged(uint256)
          handler: handleTimeLockChanged
        - event: VotingPeriodChanged(uint256)
          handler: handleVotingPeriodChanged
