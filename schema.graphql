type User @entity {
  id: ID!
  portfolioHistory: [VirtualPortfolio!]! @derivedFrom(field: "owner")
  currentPortfolio: VirtualPortfolio
  stats: UserStat!
}

type Asset @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
  totalAllocation: Int!
  isRemoved: Boolean!
  addedTimestamp: BigInt!
}

type PortfolioAllocation @entity {
  id: ID!
  asset: Asset!
  amount: BigInt!
  weight: Int!
  initialUsdPrice: BigInt!
}

type PortfolioEntry @entity {
  id: ID!
  initialValue: BigInt!
  closingValue: BigInt
  pollenStake: BigInt!
  stakeGainOrLoss: BigInt!
  allocations: [PortfolioAllocation!]!
  createdTimestamp: BigInt!
  closedTimestamp: BigInt
}

type VirtualPortfolio @entity {
  id: ID!
  owner: User!
  currentEntry: PortfolioEntry
  createdTimestamp: BigInt!
  closedTimestamp: BigInt
  rebalances: [PortfolioEntry!]!
}

type Delegation @entity {
  id: ID!
  delegator: User!
  delegatee: User!
  amount: BigInt!
}

type UserStat @entity {
  id: ID!
  user: User!
  address: String!
  totalDelegatedTo: BigInt!
  totalDelegatedFrom: BigInt!
  reputation: BigDecimal!
  pollenPnl: BigDecimal!
  totalRebalances: BigInt!
}

type Module @entity {
  id: ID!
  address: String!
  lastUpdated: BigInt!
}

type OverviewStat @entity {
  id: ID!
  assetManagers: [User!]!
  assetManagersCount: BigInt!
  totalStaked: BigDecimal!
  totalPlnEarned: BigDecimal!
}
