type Asset @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
  totalAllocation: BigInt!
  isRemoved: Boolean!
  addedTimestamp: BigInt!
}

type PortfolioAllocation @entity {
  id: ID!
  asset: Asset!
  amount: BigInt!
  weight: BigInt!
  initialUsdPrice: BigInt!
}

type AssetProfitOrLoss @entity {
  id: ID!
  asset: Asset!
  profitOrLoss: BigDecimal!
}

type PortfolioEntry @entity {
  id: ID!
  initialValue: BigInt!
  closingValue: BigInt
  allocations: [PortfolioAllocation!]!
  createdTimestamp: BigInt!
  closedTimestamp: BigInt
}

type VirtualPortfolio @entity {
  id: ID!
  openTimestamp: BigInt!
  owner: String!
  currentEntry: PortfolioEntry
  isClosed: Boolean!
  rebalances: [PortfolioEntry!]!
  pollenStake: BigInt!
  stakeGainOrLoss: BigInt
  assetsProfitOrLoss: [AssetProfitOrLoss!]!
}

type UserStat @entity {
  id: ID!
  address: String!
  totalDelegatedTo: BigInt!
  totalDelegatedFrom: BigInt!
  reputation: BigDecimal!
  pollenPnl: BigDecimal!
  totalRebalances: BigInt!
  totalDelegationFeesEarned: BigInt!
  totalDelegationFeesPaid: BigInt!
}

type OverviewStat @entity {
  id: ID!
  assetManagers: [String!]!
  assetManagersCount: BigInt!
  delegators: [String!]!
  delegatorsCount: BigInt!
  totalDelegated: BigDecimal!
  totalStaked: BigDecimal!
  totalPlnEarned: BigDecimal!
  totalFeesPaid: BigInt!
}

type Delegation @entity {
  id: ID!
  delegator: String!
  delegatee: String!
  amount: BigInt!
  startTimestamp: BigInt!
  updatedTimestamp: BigInt!
  stopTimestamp: BigInt!
}

type DelegateWithdrawal @entity {
  id: ID!
  deposited: BigInt!
  delegator: String!
  delegatee: String!
  delegatorRewardPenalty: BigDecimal!
  delegateFee: BigInt!
  timestamp: BigInt!
}

type PortfolioStakeWithdrawal @entity {
  id: ID!
  deposited: BigInt!
  rewardPenalty: BigDecimal!
  timestamp: BigInt!
}

enum ChartType {
  PortfolioManagers
  TotalStaked
  TotalProfitLoss
  Delegators
  TotalDelegated
}

type DailyChartItem @entity {
  id: ID!
  type: ChartType!
  value: BigDecimal!
  timestamp: BigInt!
}
